using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Security.Cryptography;

namespace WMS_Service_Library
{
    internal class WMS_Client_Security
    {

        public static byte[] Encrypt(byte[] clearData, byte[] Key, byte[] IV)
        {
            // Create a MemoryStream to accept the encrypted bytes 

            MemoryStream ms = new MemoryStream();


            Rijndael alg = Rijndael.Create();

            alg.Key = Key;
            alg.IV = IV;

            CryptoStream cs = new CryptoStream(ms,
               alg.CreateEncryptor(), CryptoStreamMode.Write);

            // Write the data and make it do the encryption 

            cs.Write(clearData, 0, clearData.Length);
            cs.Close();

            byte[] encryptedData = ms.ToArray();

            return encryptedData;
        }

        // Encrypt a string into a string using a password 

        //    Uses Encrypt(byte[], byte[], byte[]) 


        public static string WMS_Password_Encryption(string clearText, string Password)
        {
            // First we need to turn the input string into a byte array. 

            byte[] clearBytes =
              System.Text.Encoding.Unicode.GetBytes(clearText);


            PasswordDeriveBytes pdb = new PasswordDeriveBytes(Password,
                new byte[] { 0x87, 0x77, 0x6d, 0x69, 0x74, 0x40, 0x73, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x76, 0x67 });

            byte[] encryptedData = Encrypt(clearBytes,
                     pdb.GetBytes(32), pdb.GetBytes(16));


            return Convert.ToBase64String(encryptedData);

        }


    }
}
